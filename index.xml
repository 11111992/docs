<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cloud Native Buildpacks</title>
    <link>https://buildpacks.io/</link>
    <description>Recent content on Cloud Native Buildpacks</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://buildpacks.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Analyze</title>
      <link>https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/analyze/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/analyze/</guid>
      <description>&lt;p&gt;The &lt;code&gt;analyzer&lt;/code&gt; restores files that buildpacks may use to optimize the build and export phases.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Build for ARM architecture</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/special-cases/build-for-arm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/special-cases/build-for-arm/</guid>
      <description>As of today, there are no known released CNB builder images that support building ARM application images.&#xA;Users can create their own ARM64 builder image by following this guide.&#xA;In the following tutorial, we will be performing a build &amp;ldquo;manually&amp;rdquo;, in that we will be performing a build by invoking the lifecycle directly.&#xA;1. Prepare your working directory On your Linux ARM machine with a docker daemon installed, prepare the following directory tree structure.</description>
    </item>
    <item>
      <title>Build image</title>
      <link>https://buildpacks.io/docs/for-app-developers/concepts/base-images/build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/concepts/base-images/build/</guid>
      <description>&lt;p&gt;The &lt;strong&gt;build image&lt;/strong&gt; provides the base image from which the build environment is constructed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Buildpack API 0.4 -&gt; 0.5</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/how-to/migrate/deprecated/buildpack-api-0.4-0.5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/how-to/migrate/deprecated/buildpack-api-0.4-0.5/</guid>
      <description>This guide is most relevant to buildpack authors.&#xA;See the spec release for Buildpack API 0.5 for the full list of changes and further details.&#xA;Stack ID The buildpack may now indicate compatibility with any stack by specifying the special value *.&#xA;Character restrictions for process types For each process in launch.toml, type is now restricted to only contain numbers, letters, and the characters ., _, and -, so symlinks on both Linux and windows filesystems can be created.</description>
    </item>
    <item>
      <title>Create a build base image</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/build-inputs/create-builder/build-base/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/build-inputs/create-builder/build-base/</guid>
      <description>&lt;p&gt;The build-time base image provides the OS-level dependencies for buildpacks at build-time.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Features</title>
      <link>https://buildpacks.io/features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/features/</guid>
      <description>Cloud Native Buildpacks provide a unique solution to the image build process. See how it compares to the alternatives.</description>
    </item>
    <item>
      <title>Get started</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/get-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/get-started/</guid>
      <description>&lt;p&gt;To write a buildpack, we follow the &lt;a href=&#34;https://github.com/buildpacks/spec/blob/main/buildpack.md&#34;&gt;Buildpack Specification&lt;/a&gt;,&#xA;which defines the contract between buildpacks and the lifecycle.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Guidance for extension authors</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-extensions/guidance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-extensions/guidance/</guid>
      <description>&lt;p&gt;If you haven&amp;rsquo;t already, check out our &lt;a href=&#34;https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-extension&#34;&gt;tutorial&lt;/a&gt; on extensions,&#xA;then come here for the finer points.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Platform API 0.3 -&gt; 0.4</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/migrate/deprecated/platform-api-0.3-0.4/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/migrate/deprecated/platform-api-0.3-0.4/</guid>
      <description>This guide is most relevant to platform operators.&#xA;See the spec release for Platform API 0.4 for the full list of changes and further details.&#xA;Windows support Windows image builds are now supported! See the Windows build guide for more details.&#xA;Multicall launcher When running the exported application image, it is now possible to provide arguments to pre-defined process types. The new flow is described here. As part of these changes, the exporter will not set, and the launcher no longer accepts, the CNB_PROCESS_TYPE variable.</description>
    </item>
    <item>
      <title>Platform API 0.7 -&gt; 0.8</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/migrate/platform-api-0.7-0.8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/migrate/platform-api-0.7-0.8/</guid>
      <description>This guide is most relevant to platform operators.&#xA;See the spec release for Platform API 0.8 for the full list of changes and further details.&#xA;Platform Operator New standardized SBOM format Buildpacks implementing Buildpack API 0.7+ may output write Software Bill of Materials (SBOM) files describing build- or run-time dependencies. These files must use the application/vnd.cyclonedx+json, application/spdx+json, or application/vnd.syft+json media types (a buildpack may output SBOM files in multiple formats). Files may be written to the following locations:</description>
    </item>
    <item>
      <title>project.toml</title>
      <link>https://buildpacks.io/docs/reference/config/project-descriptor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/reference/config/project-descriptor/</guid>
      <description>&lt;p&gt;The project descriptor file allows app developers to provide configuration for apps, services, functions and buildpacks.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Run the application</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/build-outputs/specify-launch-process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/build-outputs/specify-launch-process/</guid>
      <description>Learn how to specify the launch process for an app.</description>
    </item>
    <item>
      <title>Setting up your local environment</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-buildpack/01_setup-local-environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-buildpack/01_setup-local-environment/</guid>
      <description>Check system requirements Before we get started, make sure you&amp;rsquo;ve got the following installed:&#xA;Install Docker Install pack First, we&amp;rsquo;ll create a sample nodeJS app that you can use when developing your buildpack:&#xA;mkdir node-js-sample-app Create a file in the current directory called node-js-sample-app/app.js with the following contents:&#xA;const http = require(&amp;#39;http&amp;#39;); const hostname = &amp;#39;0.0.0.0&amp;#39;; const port = 8080; const server = http.createServer((req, res) =&amp;gt; { res.statusCode = 200; res.</description>
    </item>
    <item>
      <title>Setting up your local environment</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-extension/01_setup-local-environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-extension/01_setup-local-environment/</guid>
      <description>Let&amp;rsquo;s walk through a build that uses extensions, step by step. We will see an image extension that installs curl on the builder image, and switches the run image to an image that has curl installed.&#xA;Check system requirements Before we get started, make sure you&amp;rsquo;ve got the following installed:&#xA;Install Docker Install pack Ensure Docker is running docker version If you see output similar to the following, you&amp;rsquo;re good to go!</description>
    </item>
    <item>
      <title>Specify buildpacks or extensions at build time</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/build-inputs/specify-buildpacks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/build-inputs/specify-buildpacks/</guid>
      <description>No builder author can be truly omniscient, and whoever created yours surely was no exception!</description>
    </item>
    <item>
      <title>What is a buildpack?</title>
      <link>https://buildpacks.io/docs/for-app-developers/concepts/buildpack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/concepts/buildpack/</guid>
      <description>&lt;p&gt;A &lt;code&gt;buildpack&lt;/code&gt; is software that transforms application source code into runnable artifacts&#xA;by analyzing the code and determining the best way to build it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What is a buildpack?</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/concepts/buildpack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/concepts/buildpack/</guid>
      <description>&lt;p&gt;A &lt;code&gt;buildpack&lt;/code&gt; is software that transforms application source code into runnable artifacts&#xA;by analyzing the code and determining the best way to build it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What is a buildpack?</title>
      <link>https://buildpacks.io/docs/for-platform-operators/concepts/buildpack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/concepts/buildpack/</guid>
      <description>&lt;p&gt;A &lt;code&gt;buildpack&lt;/code&gt; is software that transforms application source code into runnable artifacts&#xA;by analyzing the code and determining the best way to build it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What is the lifecycle?</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/concepts/lifecycle-phases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/concepts/lifecycle-phases/</guid>
      <description>&lt;p&gt;The lifecycle is a binary responsible for orchestrating buildpacks.&lt;/p&gt;</description>
    </item>
    <item>
      <title>An App&#39;s Brief Journey from Source to Image</title>
      <link>https://buildpacks.io/docs/app-journey/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/app-journey/</guid>
      <description>Pack for the journey In this tutorial, we&amp;rsquo;ll explain how to use pack and buildpacks to create a runnable app image from source code.&#xA;In order to run the build process in an isolated fashion, pack uses Docker or a Docker-compatible daemon to create the containers where buildpacks execute. That means you&amp;rsquo;ll need to make sure you have both pack and a daemon installed:&#xA;Install pack Install Docker or alternatively, see this page about working with podman.</description>
    </item>
    <item>
      <title>Build for Windows containers</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/special-cases/build-for-windows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/special-cases/build-for-windows/</guid>
      <description>&lt;p&gt;You can use buildpacks to build container images that run Windows containers on Windows (WCOW).&lt;/p&gt;&#xA;&lt;p&gt;This page is not relevant if your host machine is Windows but you are running Linux containers on Windows (LCOW);&#xA;in this case, no special configuration is required.&lt;/p&gt;</description>
    </item>
    <item>
      <title>builder.toml</title>
      <link>https://buildpacks.io/docs/reference/config/builder-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/reference/config/builder-config/</guid>
      <description>&lt;p&gt;The builder config file is used for creating &lt;a href=&#34;https://buildpacks.io/docs/for-platform-operators/concepts/builder&#34;&gt;builders&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Buildpack API 0.5 -&gt; 0.6</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/how-to/migrate/deprecated/buildpack-api-0.5-0.6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/how-to/migrate/deprecated/buildpack-api-0.5-0.6/</guid>
      <description>This guide is most relevant to buildpack authors.&#xA;See the spec release for Buildpack API 0.6 for the full list of changes and further details.&#xA;Opt-in layer caching and launch.toml format changes Buildpacks must now explicitly opt-in to layer re-use by setting the launch, build, and cache keys in &amp;lt;layers&amp;gt;/&amp;lt;layer&amp;gt;.toml. If buildpacks do not modify &amp;lt;layers&amp;gt;/&amp;lt;layer&amp;gt;.toml, the layer will behave like a temporary directory, available only to the authoring buildpack, existing for the duration of a single build - even if the buildpack in the previous build set any of these keys to true.</description>
    </item>
    <item>
      <title>Community</title>
      <link>https://buildpacks.io/community/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/community/</guid>
      <description>Join other users, contributors and providers of Cloud Native Buildpacks.</description>
    </item>
    <item>
      <title>Create a run base image</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/build-inputs/create-builder/run-base/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/build-inputs/create-builder/run-base/</guid>
      <description>&lt;p&gt;The runtime base image provides the OS-level dependencies for applications at runtime.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Customize buildpack behavior with build-time environment variables</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/build-inputs/configure-build-time-environment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/build-inputs/configure-build-time-environment/</guid>
      <description>&lt;p&gt;Environment variables are a common way to configure various buildpacks at build-time.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Detect</title>
      <link>https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/detect/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/detect/</guid>
      <description>&lt;p&gt;The &lt;code&gt;detector&lt;/code&gt; finds an ordered group of buildpacks to use during the build phase.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Inspect your application image</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/build-outputs/inspect-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/build-outputs/inspect-app/</guid>
      <description>&lt;p&gt;Buildpacks-built images contain metadata that allow you to audit both the image itself and the build process.&lt;/p&gt;</description>
    </item>
    <item>
      <title>kpack</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/kpack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/kpack/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/pivotal/kpack&#34;&gt;kpack&lt;/a&gt; is a Kubernetes-native platform that uses unprivileged Kubernetes primitives to perform buildpacks builds and keep application images up-to-date.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/pivotal/kpack&#34;&gt;kpack&lt;/a&gt; is part of the &lt;a href=&#34;https://github.com/buildpacks-community&#34;&gt;Buildpacks Community&lt;/a&gt; organization.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Platform API 0.4 -&gt; 0.5</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/migrate/deprecated/platform-api-0.4-0.5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/migrate/deprecated/platform-api-0.4-0.5/</guid>
      <description>This guide is most relevant to platform operators and stack authors.&#xA;See the spec release for Platform API 0.5 for the full list of changes and further details.&#xA;Platform Operator PATH must be set on stack images config.Env.PATH must be set for stack (build and run) images. Any Linux or Windows stack image missing a config.Env.PATH should cause the platform to fail with an error message.&#xA;Homepage in build metadata The exporter now adds buildpack homepage to the io.</description>
    </item>
    <item>
      <title>Platform API 0.8 -&gt; 0.9</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/migrate/platform-api-0.8-0.9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/migrate/platform-api-0.8-0.9/</guid>
      <description>This guide is most relevant to platform operators.&#xA;See the spec release for Platform API 0.9 for the full list of changes and further details.&#xA;Platform Operator Legacy BOM information removed from io.buildpacks.build.metadata label Legacy BOM information is removed from the io.buildpacks.build.metadata label and &amp;lt;layers&amp;gt;/config/metadata.toml. Buildpacks may still output BOM information in the legacy format, and it can now be found in &amp;lt;layers&amp;gt;/sbom/launch/sbom.legacy.json (for runtime dependencies) or &amp;lt;layers&amp;gt;/sbom/build/sbom.legacy.json (for build time dependencies).</description>
    </item>
    <item>
      <title>Run image</title>
      <link>https://buildpacks.io/docs/for-app-developers/concepts/base-images/run/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/concepts/base-images/run/</guid>
      <description>&lt;p&gt;The &lt;strong&gt;run image&lt;/strong&gt; provides the base image for application images.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The building blocks of a Cloud Native Buildpack</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-buildpack/02_building-blocks-cnb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-buildpack/02_building-blocks-cnb/</guid>
      <description>Now we will set up the buildpack scaffolding.&#xA;Let&amp;rsquo;s create the directory where your buildpack will live:&#xA;Using the Pack CLI The buildpack new &amp;lt;id&amp;gt; command will create a directory named for the buildpack ID.&#xA;Example:&#xA;pack buildpack new examples/node-js \ --api 0.10 \ --path node-js-buildpack \ --version 0.0.1 \ --stacks io.buildpacks.samples.stacks.jammy This command will create node-js-buildpack directory which contains buildpack.toml, bin/build, bin/detect files.&#xA;Additional Parameters -a, --api Buildpack API compatibility of the generated buildpack -h, --help Help for &amp;rsquo;new&#39; --path the location on the filesystem to generate the artifacts --stacks Stacks (deprecated) the buildpack will work with -V, --version the version of the buildpack in buildpack.</description>
    </item>
    <item>
      <title>Use the build plan</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/use-build-plan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/use-build-plan/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;https://github.com/buildpacks/spec/blob/main/buildpack.md#build-plan-toml&#34;&gt;Build Plan&lt;/a&gt; is a document that buildpacks can use to pass information between the &lt;code&gt;detect&lt;/code&gt; and &lt;code&gt;build&lt;/code&gt; phases, and between each other.&#xA;The build plan is passed (by the lifecycle) as a parameter to the &lt;code&gt;detect&lt;/code&gt; and &lt;code&gt;build&lt;/code&gt; binaries of each buildpack.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What is a builder?</title>
      <link>https://buildpacks.io/docs/for-app-developers/concepts/builder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/concepts/builder/</guid>
      <description>&lt;p&gt;A &lt;code&gt;builder&lt;/code&gt; is an &lt;a href=&#34;https://github.com/opencontainers/image-spec&#34;&gt;OCI image&lt;/a&gt; containing&#xA;an ordered combination of &lt;a href=&#34;https://buildpacks.io/docs/for-app-developers/concepts/buildpack/&#34;&gt;buildpacks&lt;/a&gt; and&#xA;a &lt;a href=&#34;https://buildpacks.io/docs/for-app-developers/concepts/base-images/build/&#34;&gt;build-time base image&lt;/a&gt;, a &lt;a href=&#34;https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/&#34;&gt;lifecycle&lt;/a&gt; binary, and a reference to a &lt;a href=&#34;https://buildpacks.io/docs/for-app-developers/concepts/base-images/run/&#34;&gt;runtime base image&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What is a builder?</title>
      <link>https://buildpacks.io/docs/for-platform-operators/concepts/builder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/concepts/builder/</guid>
      <description>&lt;p&gt;A &lt;code&gt;builder&lt;/code&gt; is an OCI image containing&#xA;an ordered combination of &lt;a href=&#34;https://buildpacks.io/docs/for-platform-operators/concepts/buildpack/&#34;&gt;buildpacks&lt;/a&gt; and&#xA;a build-time base image, a &lt;a href=&#34;https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/&#34;&gt;lifecycle&lt;/a&gt; binary, and a reference to a runtime base image.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What is a buildpack group?</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/concepts/buildpack-group/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/concepts/buildpack-group/</guid>
      <description>&lt;p&gt;A buildpack group is a list of individual buildpacks that are designged to work together to build an application.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Why this feature?</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-extension/02_why-dockerfiles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-extension/02_why-dockerfiles/</guid>
      <description>Let&amp;rsquo;s see a build that requires base image extension in order to succeed.&#xA;Examine hello-extensions buildpack detect cat $PWD/samples/buildpacks/hello-extensions/bin/detect The buildpack opts-out of the build (exits with non-zero code) unless the BP_EXT_DEMO environment variable is set.&#xA;If the BP_EXT_DEMO environment variable is set, the buildpack detects (exits with code 0), but doesn&amp;rsquo;t require any dependencies through a build plan unless the BP_REQUIRES environment variable is set.&#xA;build cat $PWD/samples/buildpacks/hello-extensions/bin/build The buildpack tries to use vim at build-time, and defines a launch process called curl that runs curl --version at runtime.</description>
    </item>
    <item>
      <title>Buildpack API 0.6 -&gt; 0.7</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/how-to/migrate/deprecated/buildpack-api-0.6-0.7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/how-to/migrate/deprecated/buildpack-api-0.6-0.7/</guid>
      <description>This guide is most relevant to buildpack authors.&#xA;See the spec release for Buildpack API 0.7 for the full list of changes and further details.&#xA;New standardized SBOM format Buildpacks may write Software Bill of Materials (SBOM) files describing build- or run-time dependencies. These files must use the application/vnd.cyclonedx+json, application/spdx+json, or application/vnd.syft+json media types (a buildpack may output SBOM files in multiple formats). Files may be written to the following locations:</description>
    </item>
    <item>
      <title>buildpack.toml</title>
      <link>https://buildpacks.io/docs/reference/config/buildpack-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/reference/config/buildpack-config/</guid>
      <description>&lt;p&gt;The buildpack configuration file is a necessary component of a &lt;a href=&#34;https://buildpacks.io/docs/for-buildpack-authors/concepts/buildpack&#34;&gt;buildpack&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CircleCI</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/circleci/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/circleci/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://circleci.com/&#34;&gt;CircleCI&lt;/a&gt; is a continuous integration and delivery platform.&lt;/p&gt;&#xA;&lt;p&gt;The CNB project maintains an integration, called an &lt;a href=&#34;https://circleci.com/orbs/&#34;&gt;orb&lt;/a&gt;,&#xA;which allows users to run &lt;a href=&#34;https://buildpacks.io/docs/install-pack&#34;&gt;pack&lt;/a&gt; commands inside their pipelines.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Create dependency layers</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/create-layer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/create-layer/</guid>
      <description>&lt;p&gt;Each directory created by the buildpack under the &lt;code&gt;CNB_LAYERS_DIR&lt;/code&gt; can be used as a layer in the final app image or build cache.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Declare source metadata</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/build-inputs/declare-source-metadata/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/build-inputs/declare-source-metadata/</guid>
      <description>Declare information about application source code, to be included as metadata in the application image.</description>
    </item>
    <item>
      <title>Detecting your application</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-buildpack/03_detection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-buildpack/03_detection/</guid>
      <description>Next, you will want to actually detect that the app you are building is a node-js app. In order to do this, you will need to check for a package.json.&#xA;Replace exit 1 in the detect script with the following check:&#xA;if [[ ! -f package.json ]]; then exit 100 fi Your node-js-buildpack/bin/detect script should look like this:&#xA;#!/usr/bin/env bash set -eo pipefail if [[ ! -f package.json ]]; then exit 100 fi Next, rebuild your app with the updated buildpack:</description>
    </item>
    <item>
      <title>Download a Software Bill-of-Materials (SBOM)</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/build-outputs/download-sbom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/build-outputs/download-sbom/</guid>
      <description>An SBOM can give you a layer-by-layer view of what&amp;rsquo;s inside your application image.</description>
    </item>
    <item>
      <title>Export to OCI layout format on disk</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/special-cases/export-to-oci-layout/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/special-cases/export-to-oci-layout/</guid>
      <description>The OCI Image Layout is the directory structure for OCI content-addressable blobs and location-addressable references.</description>
    </item>
    <item>
      <title>Mount volumes at build-time</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/build-inputs/use-volume-mounts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/build-inputs/use-volume-mounts/</guid>
      <description>Supply and persist data from build containers with arbitrary volume mounts.</description>
    </item>
    <item>
      <title>Platform API 0.5 -&gt; 0.6</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/migrate/deprecated/platform-api-0.5-0.6/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/migrate/deprecated/platform-api-0.5-0.6/</guid>
      <description>This guide is most relevant to platform operators.&#xA;See the spec release for Platform API 0.6 for the full list of changes and further details.&#xA;Platform Operator Default process type not set if none is specified The exporter will no longer set the default process type if none is specified (even if there is only one process). Buildpacks implementing Buildpack API 0.6 or greater may set the default process type, or it may be specified by passing -process-type to the exporter.</description>
    </item>
    <item>
      <title>Platform API 0.9 -&gt; 0.10</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/migrate/platform-api-0.9-0.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/migrate/platform-api-0.9-0.10/</guid>
      <description>This guide is most relevant to platform operators.&#xA;See the spec release for Platform API 0.10 for the full list of changes and further details.&#xA;Platform Operator The launcher supports overridable process arguments The way user-provided arguments are handled by the launcher depends on the Buildpack API of the buildpack that created the process definition.&#xA;Newer buildpacks Process types contributed by newer buildpacks (Buildpack API 0.9 and above) may have overridable process arguments.</description>
    </item>
    <item>
      <title>Putting it all together</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/build-inputs/create-builder/builder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/build-inputs/create-builder/builder/</guid>
      <description>&lt;p&gt;After you have created a build-time base image and a runtime base image, you are ready to create your builder!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Restore</title>
      <link>https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/restore/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/restore/</guid>
      <description>&lt;p&gt;The &lt;code&gt;restorer&lt;/code&gt; copies layers from the cache into the build container.&lt;/p&gt;</description>
    </item>
    <item>
      <title>The building blocks of a CNB image extension</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-extension/03_building-blocks-extension/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-extension/03_building-blocks-extension/</guid>
      <description>Examine vim extension tree $PWD/samples/extensions/vim You should see something akin to the following:&#xA;. ├── bin │ ├── detect &amp;lt;- similar to a buildpack ./bin/detect │ ├── generate &amp;lt;- similar to a buildpack ./bin/build ├── extension.toml &amp;lt;- similar to a buildpack buildpack.toml The extension.toml describes the extension, containing information such as its name, ID, and version, as well as the Buildpack API that it implements. Though extensions are not buildpacks, they are expected to conform to the Buildpack API except where noted.</description>
    </item>
    <item>
      <title>What are targets?</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/concepts/targets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/concepts/targets/</guid>
      <description>&lt;p&gt;The concept of &lt;code&gt;targets&lt;/code&gt; is used to identify compatibility between buildpacks and base images.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What happens during build?</title>
      <link>https://buildpacks.io/docs/for-app-developers/concepts/build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/concepts/build/</guid>
      <description>&lt;p&gt;&lt;code&gt;Build&lt;/code&gt; is the process of executing one or more &lt;a href=&#34;https://buildpacks.io/docs/for-app-developers/concepts/buildpack/&#34;&gt;buildpacks&lt;/a&gt; against an application&amp;rsquo;s source code to produce a runnable OCI image.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Build</title>
      <link>https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/build/</guid>
      <description>&lt;p&gt;The &lt;code&gt;builder&lt;/code&gt; transforms application source code into runnable artifacts that can be packaged into a container.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building your application</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-buildpack/04_build-app/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-buildpack/04_build-app/</guid>
      <description>Now we&amp;rsquo;ll change the build step you created to install application dependencies. This will require updates to the build script such that it performs the following steps:&#xA;Create a layer for the NodeJS runtime Download the NodeJS runtime and installs it to the layer By doing this, you&amp;rsquo;ll learn how to create arbitrary layers with your buildpack, and how to read the contents of the app in order to perform actions like downloading dependencies.</description>
    </item>
    <item>
      <title>Buildpack API 0.7 -&gt; 0.8</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/how-to/migrate/buildpack-api-0.7-0.8/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/how-to/migrate/buildpack-api-0.7-0.8/</guid>
      <description>This guide is most relevant to buildpack authors.&#xA;See the spec release for Buildpack API 0.8 for the full list of changes and further details.&#xA;Process-Specific Working Directory Buildpacks may specify the working directory for a process by setting the working-dir field on the process in launch.toml.&#xA;Prior to this, all processes ran from the app directory (CNB_APP_DIR). Running a process from a different directory typically involved running a shell to execute a cd command and then start the process, like:</description>
    </item>
    <item>
      <title>Extending the build-time base image with a build.Dockerfile</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-extension/04_build-dockerfile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-extension/04_build-dockerfile/</guid>
      <description>Builder images can be kept lean if image extensions are used to dynamically install the needed dependencies for the current application.&#xA;Examine vim extension detect cat $PWD/samples/extensions/vim/bin/detect The extension always detects (because its exit code is 0) and provides a dependency called vim by writing to the build plan.&#xA;generate cat $PWD/samples/extensions/vim/bin/generate The extension generates a build.Dockerfile that installs vim on the builder image.&#xA;Configure the hello-extensions buildpack to require vim Set the BP_REQUIRES build-time environment variable to configure the hello-extensions buildpack to require vim (review the .</description>
    </item>
    <item>
      <title>Gitlab Auto DevOps</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/gitlab/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/gitlab/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://about.gitlab.com/&#34;&gt;Gitlab&lt;/a&gt; is a web-based DevOps platform. The &lt;a href=&#34;https://docs.gitlab.com/ee/topics/autodevops/&#34;&gt;Auto DevOps&lt;/a&gt; feature uses &lt;a href=&#34;https://buildpacks.io/docs/install-pack&#34;&gt;&lt;code&gt;pack&lt;/code&gt;&lt;/a&gt;&#xA;to build applications prior to deploying them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Package a buildpack or extension</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/how-to/distribute-buildpacks/package-buildpack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/how-to/distribute-buildpacks/package-buildpack/</guid>
      <description>Learn how to package your buildpack or extension for distribution.</description>
    </item>
    <item>
      <title>package.toml</title>
      <link>https://buildpacks.io/docs/reference/config/package-config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/reference/config/package-config/</guid>
      <description>&lt;p&gt;The package config file is used for packaging buildpacks for distribution as OCI images or tar files.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Platform API 0.10 -&gt; 0.11</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/migrate/platform-api-0.10-0.11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/migrate/platform-api-0.10-0.11/</guid>
      <description>This guide is most relevant to platform operators and builder authors.&#xA;See the spec release for Platform API 0.11 for the full list of changes and further details.&#xA;Platform Operator SBOM files for the launcher are included in the application image In Platform 0.11, the lifecycle ships with standardized SBOM files describing the lifecycle and launcher binaries (these are included in the tarball on the GitHub release page and within the image at index.</description>
    </item>
    <item>
      <title>Platform API 0.6 -&gt; 0.7</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/migrate/deprecated/platform-api-0.6-0.7/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/migrate/deprecated/platform-api-0.6-0.7/</guid>
      <description>This guide is most relevant to platform operators.&#xA;See the spec release for Platform API 0.7 for the full list of changes and further details.&#xA;Platform Operator Run the analyzer before the detector The order of the lifecycle phases has been changed starting from Platform API 0.7.&#xA;The order before Platform API 0.7 was: detect, analyze, restore, build, and export.&#xA;The order starting from Platform API 0.7 is: analyze, detect, restore, build, and export.</description>
    </item>
    <item>
      <title>Specify process types</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/specify-launch-processes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/specify-launch-processes/</guid>
      <description>&lt;p&gt;One of the benefits of buildpacks is that they are multi-process - an image can have multiple entrypoints for each operational mode.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Use an HTTP proxy</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/special-cases/use-http-proxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/special-cases/use-http-proxy/</guid>
      <description>Useful for university or corporate environments.</description>
    </item>
    <item>
      <title>Use project.toml</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/build-inputs/use-project-toml/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/build-inputs/use-project-toml/</guid>
      <description>Simplify your &lt;code&gt;pack&lt;/code&gt; configuration.</description>
    </item>
    <item>
      <title>What caching strategies are available to buildpacks?</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/concepts/caching-strategies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/concepts/caching-strategies/</guid>
      <description>Learn strategies for caching layers at build-time for future re-use.</description>
    </item>
    <item>
      <title>What happens during rebase?</title>
      <link>https://buildpacks.io/docs/for-app-developers/concepts/rebase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/concepts/rebase/</guid>
      <description>&lt;p&gt;&lt;code&gt;Rebase&lt;/code&gt; allows app developers or operators to rapidly update an app image when its &lt;a href=&#34;https://buildpacks.io/docs/for-app-developers/concepts/base-images/run/&#34;&gt;runtime base image&lt;/a&gt; has changed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What is a platform?</title>
      <link>https://buildpacks.io/docs/for-app-developers/concepts/platform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/concepts/platform/</guid>
      <description>&lt;p&gt;A &lt;code&gt;platform&lt;/code&gt; orchestrates &lt;a href=&#34;https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/&#34;&gt;builds&lt;/a&gt; by invoking the &lt;a href=&#34;https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/&#34;&gt;lifecycle&lt;/a&gt; binary together with &lt;a href=&#34;https://buildpacks.io/docs/for-app-developers/concepts/buildpack/&#34;&gt;buildpacks&lt;/a&gt; and&#xA;application source code to produce a runnable OCI image.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Build on Podman</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/special-cases/build-on-podman/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/special-cases/build-on-podman/</guid>
      <description>Use Podman as an alternative to Docker to create the containerized build environment.</description>
    </item>
    <item>
      <title>Buildpack API 0.8 -&gt; 0.9</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/how-to/migrate/buildpack-api-0.8-0.9/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/how-to/migrate/buildpack-api-0.8-0.9/</guid>
      <description>This guide is most relevant to buildpack authors.&#xA;See the spec release for Buildpack API 0.9 for the full list of changes and further details.&#xA;Shell removal Buildpack-defined processes may no longer implicitly rely on a shell (be non-direct).&#xA;In launch.toml, direct is removed as a key in the [[processes]] table, and all processes are inferred to be direct = true.&#xA;Buildpack processes can still use a shell! However, the command must now explicitly begin with /bin/sh (or cmd.</description>
    </item>
    <item>
      <title>Export</title>
      <link>https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/export/</guid>
      <description>&lt;p&gt;The &lt;code&gt;exporter&lt;/code&gt; creates the final OCI image.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Making your application runnable</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-buildpack/05_make-app-runnable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-buildpack/05_make-app-runnable/</guid>
      <description>To make your app runnable, a default start command must be set. You&amp;rsquo;ll need to add the following to the end of your build script:&#xA;# ... # Set default start command cat &amp;gt; &amp;#34;${CNB_LAYERS_DIR}/launch.toml&amp;#34; &amp;lt;&amp;lt; EOL [[processes]] type = &amp;#34;web&amp;#34; command = [&amp;#34;node&amp;#34;, &amp;#34;app.js&amp;#34;] default = true EOL # ... Your full node-js-buildpack/bin/build script should now look like the following:&#xA;#!/usr/bin/env bash set -eo pipefail echo &amp;#34;---&amp;gt; NodeJS Buildpack&amp;#34; # 1.</description>
    </item>
    <item>
      <title>Platform API 0.11 -&gt; 0.12</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/migrate/platform-api-0.11-0.12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/migrate/platform-api-0.11-0.12/</guid>
      <description>This guide is most relevant to platform operators, base image authors, and builder authors.&#xA;See the spec release for Platform API 0.12 for the full list of changes and further details.&#xA;Platform Operator Stacks are deprecated In Platform 0.12, the concepts of stacks and mixins are removed in favor of existing constructs in the container image ecosystem such as operating system name, operating system distribution, and architecture.&#xA;During build The -stack flag is removed from the analyzer and exporter and replaced with a -run flag that indicates the location of a run.</description>
    </item>
    <item>
      <title>Project &#34;Piper&#34;</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/piper/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/piper/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.project-piper.io/&#34;&gt;Project &amp;ldquo;Piper&amp;rdquo;&lt;/a&gt; is a set of ready-made continuous delivery pipelines for direct use in your project.&#xA;It now also implements the CNB Platform spec as a step and makes it available in your Jenkins pipeline.&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.project-piper.io/&#34;&gt;Project &amp;ldquo;Piper&amp;rdquo;&lt;/a&gt; is maintained by &lt;a href=&#34;https://www.sap.com/&#34;&gt;SAP&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Provide a Software Bill-of-Materials</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/add-sbom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/add-sbom/</guid>
      <description>&lt;p&gt;Buildpacks can provide a &lt;a href=&#34;https://en.wikipedia.org/wiki/Software_bill_of_materials&#34;&gt;Software &lt;code&gt;Bill-of-Materials&lt;/code&gt;&lt;/a&gt; (SBOM)&#xA;to describe the dependencies that they provide.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Publishing with Github Actions</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/how-to/distribute-buildpacks/publish-buildpack/with-github-actions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/how-to/distribute-buildpacks/publish-buildpack/with-github-actions/</guid>
      <description>Learn how to automatically publish your buildpack to the Buildpack Registry from a Github Action.</description>
    </item>
    <item>
      <title>Switching the runtime base image with a run.Dockerfile</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-extension/05_run-dockerfile-switch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-extension/05_run-dockerfile-switch/</guid>
      <description>Platforms can have several run images available, each tailored to a specific language family - thus limiting the number of installed dependencies for each image to the minimum necessary to support the targeted language. Image extensions can be used to switch the run image to that most appropriate for the current application.&#xA;Examine curl extension detect cat $PWD/samples/extensions/curl/bin/detect The extension always detects (because its exit code is 0) and provides a dependency called curl.</description>
    </item>
    <item>
      <title>Use an inline buildpack</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/build-inputs/use-inline-buildpacks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/build-inputs/use-inline-buildpacks/</guid>
      <description>Customize your build with a bit of shell script.</description>
    </item>
    <item>
      <title>Buildpack API 0.9 -&gt; 0.10</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/how-to/migrate/buildpack-api-0.9-0.10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/how-to/migrate/buildpack-api-0.9-0.10/</guid>
      <description>This guide is most relevant to buildpack authors.&#xA;See the spec release for Buildpack API 0.10 for the full list of changes and further details.&#xA;Stacks are deprecated In Buildpack 0.10, the concepts of stacks and mixins are removed in favor of existing constructs in the container image ecosystem such as operating system name, operating system distribution, and architecture.&#xA;Before build builder.toml contains a new table for buildpacks to express the os/arch combinations that they are compatible with:</description>
    </item>
    <item>
      <title>Create</title>
      <link>https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/create/</guid>
      <description>&lt;p&gt;The &lt;code&gt;creator&lt;/code&gt; runs analyze, detect, restore, build, and export in a single command.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Extending the runtime base image with a run.Dockerfile</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-extension/06_run-dockerfile-extend/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-extension/06_run-dockerfile-extend/</guid>
      <description>Run images can be kept lean if image extensions are used to dynamically install the needed dependencies for the current application.&#xA;Examine cowsay extension detect cat $PWD/samples/extensions/cowsay/bin/detect The extension always detects (because its exit code is 0) and provides a dependency called cowsay.&#xA;generate cat $PWD/samples/extensions/cowsay/bin/generate The extension generates a run.Dockerfile that installs cowsay on the current run image.&#xA;Configure the hello-extensions buildpack to require cowsay Set the BP_REQUIRES build-time environment variable to configure the hello-extensions buildpack to require both vim and curl (review the .</description>
    </item>
    <item>
      <title>Improving performance with caching</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-buildpack/06_caching/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-buildpack/06_caching/</guid>
      <description>We can improve performance by caching the runtime between builds, only re-downloading when necessary. To begin, let&amp;rsquo;s cache the runtime layer.&#xA;Cache the runtime layer To do this, replace the following lines in the build script:&#xA;# 4. MAKE node-js AVAILABLE DURING LAUNCH echo -e &amp;#39;[types]\nlaunch = true&amp;#39; &amp;gt; &amp;#34;${CNB_LAYERS_DIR}/node-js.toml&amp;#34; with the following:&#xA;# 4. MAKE node-js AVAILABLE DURING LAUNCH and CACHE it echo -e &amp;#39;[types]\ncache = true\nlaunch = true&amp;#39; &amp;gt; &amp;#34;${CNB_LAYERS_DIR}/node-js.</description>
    </item>
    <item>
      <title>Tekton</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/tekton/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/tekton/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://tekton.dev/&#34;&gt;Tekton&lt;/a&gt; is an open-source CI/CD system running on k8s.&lt;/p&gt;&#xA;&lt;p&gt;The CNB project has created two reference &amp;ldquo;tasks&amp;rdquo; for performing buildpacks builds,&#xA;both of which use the &lt;a href=&#34;https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle&#34;&gt;lifecycle&lt;/a&gt; directly (i.e. they do not use &lt;code&gt;pack&lt;/code&gt;).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Use a cache image</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/build-inputs/use-cache-image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/build-inputs/use-cache-image/</guid>
      <description>Share layers between builds with a cache image.</description>
    </item>
    <item>
      <title>What is build reproducibility?</title>
      <link>https://buildpacks.io/docs/for-app-developers/concepts/reproducibility/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/concepts/reproducibility/</guid>
      <description>&lt;p&gt;Given the same inputs, two builds should produce the same outputs.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Launch</title>
      <link>https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/launch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/launch/</guid>
      <description>&lt;p&gt;The &lt;code&gt;launcher&lt;/code&gt; is the entrypoint for the final OCI image, responsible for launching application processes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Making your buildpack configurable</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-buildpack/07_make-buildpack-configurable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/tutorials/basic-buildpack/07_make-buildpack-configurable/</guid>
      <description>It&amp;rsquo;s likely that not all NodeJS apps will want to use the same version of NodeJS. Let&amp;rsquo;s make the NodeJS version configurable.&#xA;Select NodeJS version We&amp;rsquo;ll allow buildpack users to define the desired NodeJS version via a .node-js-version file in their app. We&amp;rsquo;ll first update the detect script to check for this file. We will then record the dependency we can provide (NodeJS), as well as the specific dependency the application will require, in the Build Plan, a document the lifecycle uses to determine if the buildpack will provide everything the application needs.</description>
    </item>
    <item>
      <title>Rebase</title>
      <link>https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/rebase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/rebase/</guid>
      <description>&lt;p&gt;The &lt;code&gt;rebaser&lt;/code&gt; places application layers atop a new version of the runtime base image.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Specify export target</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/build-inputs/specify-export-target/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/build-inputs/specify-export-target/</guid>
      <description>&lt;p&gt;Tell &lt;code&gt;pack&lt;/code&gt; where you want your application image to be saved.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Add labels to the application image</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/add-labels/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/add-labels/</guid>
      <description>This page is a stub! The CNB project is applying to Google Season of Docs to receive support for improving our documentation. Please check back soon.&#xA;If you are familiar with this content and would like to make a contribution, please feel free to open a PR :)</description>
    </item>
    <item>
      <title>Clear the buildpack environment</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/clear-env/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/clear-env/</guid>
      <description>This page is a stub! The CNB project is applying to Google Season of Docs to receive support for improving our documentation. Please check back soon.&#xA;If you are familiar with this content and would like to make a contribution, please feel free to open a PR :)</description>
    </item>
    <item>
      <title>Craft a buildpack order</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/how-to/distribute-buildpacks/craft-order/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/how-to/distribute-buildpacks/craft-order/</guid>
      <description>This page is a stub! The CNB project is applying to Google Season of Docs to receive support for improving our documentation. Please check back soon.&#xA;If you are familiar with this content and would like to make a contribution, please feel free to open a PR :)</description>
    </item>
    <item>
      <title>Create a stack (deprecated)</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/build-inputs/stack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/build-inputs/stack/</guid>
      <description>&lt;p&gt;A stack is the grouping together of the build and run base images, represented by a unique ID.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Create slice layers</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/create-slice-layers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/create-slice-layers/</guid>
      <description>This page is a stub! The CNB project is applying to Google Season of Docs to receive support for improving our documentation. Please check back soon.&#xA;If you are familiar with this content and would like to make a contribution, please feel free to open a PR :)</description>
    </item>
    <item>
      <title>Re-use dependency layers</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/re-use-layers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/re-use-layers/</guid>
      <description>This page is a stub! The CNB project is applying to Google Season of Docs to receive support for improving our documentation. Please check back soon.&#xA;If you are familiar with this content and would like to make a contribution, please feel free to open a PR :)</description>
    </item>
    <item>
      <title>Specify the default launch process</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/build-inputs/specify-default-launch-process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/build-inputs/specify-default-launch-process/</guid>
      <description>Buildpacks can define multiple processes for an application image. Specify which process should be the default.</description>
    </item>
    <item>
      <title>Specify the environment</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/specify-env/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/specify-env/</guid>
      <description>This page is a stub! The CNB project is applying to Google Season of Docs to receive support for improving our documentation. Please check back soon.&#xA;If you are familiar with this content and would like to make a contribution, please feel free to open a PR :)&#xA;To cover:&#xA;POSIX paths Build env Process env Runtime env Modifiers </description>
    </item>
    <item>
      <title>Stack</title>
      <link>https://buildpacks.io/docs/for-app-developers/concepts/base-images/stack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/concepts/base-images/stack/</guid>
      <description>&lt;p&gt;A stack (deprecated) is the grouping together of the build and run base images, represented by a unique ID.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understand build failures</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/build-outputs/understand-failures/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/build-outputs/understand-failures/</guid>
      <description>How to troubleshoot when things go wrong.</description>
    </item>
    <item>
      <title>Use exec.d binaries to configure the application at runtime</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/use-exec.d/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/how-to/write-buildpacks/use-exec.d/</guid>
      <description>This page is a stub! The CNB project is applying to Google Season of Docs to receive support for improving our documentation. Please check back soon.&#xA;If you are familiar with this content and would like to make a contribution, please feel free to open a PR :)</description>
    </item>
    <item>
      <title>What is a buildpack dependency layer?</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/concepts/layer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/concepts/layer/</guid>
      <description>This page is a stub! The CNB project is applying to Google Season of Docs to receive support for improving our documentation. Please check back soon.&#xA;If you are familiar with this content and would like to make a contribution, please feel free to open a PR :)</description>
    </item>
    <item>
      <title>What is a buildpack package?</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/concepts/package/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/concepts/package/</guid>
      <description>This page is a stub! The CNB project is applying to Google Season of Docs to receive support for improving our documentation. Please check back soon.&#xA;If you are familiar with this content and would like to make a contribution, please feel free to open a PR :)</description>
    </item>
    <item>
      <title>What is a component buildpack?</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/concepts/component-buildpack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/concepts/component-buildpack/</guid>
      <description>This page is a stub! The CNB project is applying to Google Season of Docs to receive support for improving our documentation. Please check back soon.&#xA;If you are familiar with this content and would like to make a contribution, please feel free to open a PR :)</description>
    </item>
    <item>
      <title>What is a composite buildpack?</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/concepts/composite-buildpack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/concepts/composite-buildpack/</guid>
      <description>A composite buildpack, also sometimes called a &amp;ldquo;meta-buildpack&amp;rdquo;, is a buildpack that does not contain any ./bin/detect or ./bin/build binaries, but instead references other buildpacks in its buildpack.toml via the [[order]] array.&#xA;This is useful for composing more complex detection strategies.</description>
    </item>
    <item>
      <title>What is a composite buildpack?</title>
      <link>https://buildpacks.io/docs/for-platform-operators/concepts/composite-buildpack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/concepts/composite-buildpack/</guid>
      <description>A composite buildpack, also sometimes called a &amp;ldquo;meta-buildpack&amp;rdquo;, is a buildpack that does not contain any ./bin/detect or ./bin/build binaries, but instead references other buildpacks in its buildpack.toml via the [[order]] array.&#xA;This is useful for composing more complex detection strategies.</description>
    </item>
    <item>
      <title>What is an image extension?</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/concepts/extension/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/concepts/extension/</guid>
      <description>&lt;p&gt;An &lt;code&gt;image extension&lt;/code&gt; is software that generates Dockerfiles that can be used to extend base images for buildpacks builds.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What is an image extension?</title>
      <link>https://buildpacks.io/docs/for-platform-operators/concepts/extension/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/concepts/extension/</guid>
      <description>&lt;p&gt;An &lt;code&gt;image extension&lt;/code&gt; is software that generates Dockerfiles that can be used to extend base images for buildpacks builds.&lt;/p&gt;</description>
    </item>
    <item>
      <title>What is the build plan?</title>
      <link>https://buildpacks.io/docs/for-buildpack-authors/concepts/build-plan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-buildpack-authors/concepts/build-plan/</guid>
      <description>This page is a stub! The CNB project is applying to Google Season of Docs to receive support for improving our documentation. Please check back soon.&#xA;If you are familiar with this content and would like to make a contribution, please feel free to open a PR :)</description>
    </item>
    <item>
      <title>Specify an image extension in a builder</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/build-inputs/create-builder/extensions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/build-inputs/create-builder/extensions/</guid>
      <description>&lt;p&gt;If you are using extensions, here is how to include them in a builder.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Buildpack API</title>
      <link>https://buildpacks.io/docs/reference/spec/buildpack-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/reference/spec/buildpack-api/</guid>
      <description>&lt;p&gt;The Buildpack API specifies the interface between a &lt;a href=&#34;https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/&#34;&gt;lifecycle&lt;/a&gt; program and one or more &lt;a href=&#34;https://buildpacks.io/docs/for-platform-operators/concepts/buildpack/&#34;&gt;buildpacks&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Distribution API</title>
      <link>https://buildpacks.io/docs/reference/spec/distribution-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/reference/spec/distribution-api/</guid>
      <description>&lt;p&gt;This specification defines the artifact format, delivery mechanism, and order resolution process for buildpacks.&lt;/p&gt;</description>
    </item>
    <item>
      <title>pack</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack/</guid>
      <description>pack CLI for building apps using Cloud Native Buildpacks&#xA;Options --force-color Force color output -h, --help Help for &amp;#39;pack&amp;#39; --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output --version Show current &amp;#39;pack&amp;#39; version SEE ALSO pack build&#x9;- Generate app image from source code pack builder&#x9;- Interact with builders pack buildpack&#x9;- Interact with buildpacks pack completion&#x9;- Outputs completion script location pack config&#x9;- Interact with your local pack config file pack extension&#x9;- Interact with extensions pack inspect&#x9;- Show information about a built app image pack rebase&#x9;- Rebase app image with latest run image pack report&#x9;- Display useful information for reporting an issue pack sbom&#x9;- Interact with SBoM pack stack&#x9;- (deprecated) Interact with stacks pack version&#x9;- Show current &amp;lsquo;pack&amp;rsquo; version </description>
    </item>
    <item>
      <title>pack build</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_build/</guid>
      <description>pack build Generate app image from source code&#xA;Synopsis Pack Build uses Cloud Native Buildpacks to create a runnable app image from source code.&#xA;Pack Build requires an image name, which will be generated from the source code. Build defaults to the current directory, but you can use --path to specify another source code directory. Build requires a builder, which can either be provided directly to build using --builder, or can be set using the set-default-builder command.</description>
    </item>
    <item>
      <title>pack builder</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_builder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_builder/</guid>
      <description>pack builder Interact with builders&#xA;Options -h, --help Help for &amp;#39;builder&amp;#39; Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack&#x9;- CLI for building apps using Cloud Native Buildpacks pack builder create&#x9;- Create builder image pack builder inspect&#x9;- Show information about a builder pack builder suggest&#x9;- List the recommended builders </description>
    </item>
    <item>
      <title>pack builder create</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_builder_create/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_builder_create/</guid>
      <description>pack builder create Create builder image&#xA;Synopsis A builder is an image that bundles all the bits and information on how to build your apps, such as buildpacks, an implementation of the lifecycle, and a build-time environment that pack uses when executing the lifecycle. When building an app, you can use community builders; you can see our suggestions by running&#xA;pack builders suggest Creating a custom builder allows you to control what buildpacks are used and what image apps are based on.</description>
    </item>
    <item>
      <title>pack builder inspect</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_builder_inspect/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_builder_inspect/</guid>
      <description>pack builder inspect Show information about a builder&#xA;Synopsis Show information about the builder provided. If no argument is provided, it will inspect the default builder, if one has been set.&#xA;pack builder inspect &amp;lt;builder-image-name&amp;gt; [flags] Examples pack builder inspect cnbs/sample-builder:bionic Options -d, --depth int Max depth to display for Detection Order. Omission of this flag or values &amp;lt; 0 will display the entire tree. (default -1) -h, --help Help for &amp;#39;inspect&amp;#39; -o, --output string Output format to display builder detail (json, yaml, toml, human-readable).</description>
    </item>
    <item>
      <title>pack builder suggest</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_builder_suggest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_builder_suggest/</guid>
      <description>pack builder suggest List the recommended builders&#xA;pack builder suggest [flags] Examples pack builder suggest Options -h, --help Help for &amp;#39;suggest&amp;#39; Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack builder&#x9;- Interact with builders </description>
    </item>
    <item>
      <title>pack buildpack</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_buildpack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_buildpack/</guid>
      <description>pack buildpack Interact with buildpacks&#xA;Options -h, --help Help for &amp;#39;buildpack&amp;#39; Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack&#x9;- CLI for building apps using Cloud Native Buildpacks pack buildpack inspect&#x9;- Show information about a buildpack pack buildpack new&#x9;- Creates basic scaffolding of a buildpack. pack buildpack package&#x9;- Package a buildpack in OCI format.</description>
    </item>
    <item>
      <title>pack buildpack inspect</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_buildpack_inspect/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_buildpack_inspect/</guid>
      <description>pack buildpack inspect Show information about a buildpack&#xA;pack buildpack inspect &amp;lt;image-name&amp;gt; [flags] Examples pack buildpack inspect cnbs/sample-package:hello-universe Options -d, --depth int Max depth to display for Detection Order. Omission of this flag or values &amp;lt; 0 will display the entire tree. (default -1) -h, --help Help for &amp;#39;inspect&amp;#39; -r, --registry string buildpack registry that may be searched -v, --verbose show more output Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output SEE ALSO pack buildpack&#x9;- Interact with buildpacks </description>
    </item>
    <item>
      <title>pack buildpack new</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_buildpack_new/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_buildpack_new/</guid>
      <description>pack buildpack new Creates basic scaffolding of a buildpack.&#xA;Synopsis buildpack new generates the basic scaffolding of a buildpack repository. It creates a new directory name in the current directory (or at path, if passed as a flag), and initializes a buildpack.toml, and two executable bash scripts, bin/detect and bin/build.&#xA;pack buildpack new &amp;lt;id&amp;gt; [flags] Examples pack buildpack new sample/my-buildpack Options -a, --api string Buildpack API compatibility of the generated buildpack (default &amp;#34;0.</description>
    </item>
    <item>
      <title>pack buildpack package</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_buildpack_package/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_buildpack_package/</guid>
      <description>pack buildpack package Package a buildpack in OCI format.&#xA;Synopsis buildpack package allows users to package (a) buildpack(s) into OCI format, which can then to be hosted in image repositories or persisted on disk as a &amp;lsquo;.cnb&amp;rsquo; file. You can also package a number of buildpacks together, to enable easier distribution of a set of buildpacks. Packaged buildpacks can be used as inputs to pack build (using the --buildpack flag), and they can be included in the configs used in pack builder create and pack buildpack package.</description>
    </item>
    <item>
      <title>pack buildpack pull</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_buildpack_pull/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_buildpack_pull/</guid>
      <description>pack buildpack pull Pull a buildpack from a registry and store it locally&#xA;pack buildpack pull &amp;lt;uri&amp;gt; [flags] Examples pack buildpack pull example/my-buildpack@1.0.0 Options -r, --buildpack-registry string Buildpack Registry name -h, --help Help for &amp;#39;pull&amp;#39; Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack buildpack&#x9;- Interact with buildpacks </description>
    </item>
    <item>
      <title>pack buildpack register</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_buildpack_register/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_buildpack_register/</guid>
      <description>pack buildpack register Register a buildpack to a registry&#xA;pack buildpack register &amp;lt;image&amp;gt; [flags] Examples pack buildpack register my-buildpack Options -r, --buildpack-registry string Buildpack Registry name -h, --help Help for &amp;#39;register&amp;#39; Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack buildpack&#x9;- Interact with buildpacks </description>
    </item>
    <item>
      <title>pack buildpack yank</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_buildpack_yank/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_buildpack_yank/</guid>
      <description>pack buildpack yank Mark a buildpack on a Buildpack registry as unusable&#xA;pack buildpack yank &amp;lt;buildpack-id-and-version&amp;gt; [flags] Examples pack yank my-buildpack@0.0.1 Options -r, --buildpack-registry string Buildpack Registry name -h, --help Help for &amp;#39;yank&amp;#39; -u, --undo undo previously yanked buildpack Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack buildpack&#x9;- Interact with buildpacks </description>
    </item>
    <item>
      <title>pack completion</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_completion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_completion/</guid>
      <description>pack completion Outputs completion script location&#xA;Synopsis Generates completion script and outputs its location.&#xA;To configure your bash shell to load completions for each session, add the following to your &amp;lsquo;.bashrc&amp;rsquo; or &amp;lsquo;.bash_profile&amp;rsquo;:&#xA;. $(pack completion) To configure your fish shell to load completions for each session, add the following to your &amp;lsquo;~/.config/fish/config.fish&amp;rsquo;:&#xA;source (pack completion --shell fish) To configure your powershell to load completions for each session, add the following to your &amp;lsquo;$Home[My ]Documents\PowerShell</description>
    </item>
    <item>
      <title>pack config</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config/</guid>
      <description>pack config Interact with your local pack config file&#xA;Options -h, --help Help for &amp;#39;config&amp;#39; Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack&#x9;- CLI for building apps using Cloud Native Buildpacks pack config default-builder&#x9;- List, set and unset the default builder used by other commands pack config experimental&#x9;- List and set the current &amp;rsquo;experimental&amp;rsquo; value from the config pack config lifecycle-image&#x9;- Configure a custom container image for the lifecycle pack config pull-policy&#x9;- List, set and unset the global pull policy used by other commands pack config registries&#x9;- List, add and remove registries pack config registry-mirrors&#x9;- List, add and remove OCI registry mirrors pack config run-image-mirrors&#x9;- List, add and remove run image mirrors pack config trusted-builders&#x9;- List, add and remove trusted builders </description>
    </item>
    <item>
      <title>pack config default-builder</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_default-builder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_default-builder/</guid>
      <description>pack config default-builder List, set and unset the default builder used by other commands&#xA;Synopsis List, set, and unset the default builder used by other commands.&#xA;To list your default builder, run pack config default-builder. To set your default builder, run pack config default-builder &amp;lt;builder-name&amp;gt;. To unset your default builder, run pack config default-builder --unset. For suggested builders, run pack builder suggest.&#xA;pack config default-builder [flags] Examples pack config default-builder cnbs/sample-builder:bionic Options -h, --help Help for &amp;#39;config default-builder&amp;#39; -u, --unset Unset the current default builder Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack config&#x9;- Interact with your local pack config file </description>
    </item>
    <item>
      <title>pack config experimental</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_experimental/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_experimental/</guid>
      <description>pack config experimental List and set the current &amp;rsquo;experimental&amp;rsquo; value from the config&#xA;Synopsis Experimental features in pack are gated, and require you adding setting experimental=true to the Pack Config, either manually, or using this command.&#xA;Running pack config experimental prints whether experimental features are currently enabled. Running pack config experimental &amp;lt;true | false&amp;gt; enables or disables experimental features. pack config experimental [&amp;lt;true | false&amp;gt;] [flags] Options -h, --help Help for &amp;#39;experimental&amp;#39; Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack config&#x9;- Interact with your local pack config file </description>
    </item>
    <item>
      <title>pack config lifecycle-image</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_lifecycle-image/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_lifecycle-image/</guid>
      <description>pack config lifecycle-image Configure a custom container image for the lifecycle&#xA;Synopsis You can use this command to set a custom image to fetch the lifecycle from.This will be used for untrusted builders. If unset, defaults to: buildpacksio/lifecycleFor more on trusted builders, and when to trust or untrust a builder, check out our docs here: https://buildpacks.io/docs/tools/pack/concepts/trusted_builders/&#xA;pack config lifecycle-image &amp;lt;lifecycle-image&amp;gt; [flags] Options -h, --help Help for &amp;#39;lifecycle-image&amp;#39; -u, --unset Unset custom lifecycle image, and use the lifecycle images from [94mbuildpacksio/lifecycle[0m Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack config&#x9;- Interact with your local pack config file </description>
    </item>
    <item>
      <title>pack config pull-policy</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_pull-policy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_pull-policy/</guid>
      <description>pack config pull-policy List, set and unset the global pull policy used by other commands&#xA;Synopsis You can use this command to list, set, and unset the default pull policy that will be used when working with containers:&#xA;To list your pull policy, run pack config pull-policy. To set your pull policy, run pack config pull-policy &amp;lt;always | if-not-present | never&amp;gt;. To unset your pull policy, run pack config pull-policy --unset.</description>
    </item>
    <item>
      <title>pack config registries</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_registries/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_registries/</guid>
      <description>pack config registries List, add and remove registries&#xA;Synopsis A Buildpack Registry is a (still experimental) place to publish, store, and discover buildpacks. You can use the attached commands to list, add, and remove registries from your config&#xA;pack config registries [flags] Options -h, --help Help for &amp;#39;registries&amp;#39; Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack config&#x9;- Interact with your local pack config file pack config registries add&#x9;- Add a registries pack config registries default&#x9;- Set default registry pack config registries list&#x9;- List registries pack config registries remove&#x9;- Remove a registries </description>
    </item>
    <item>
      <title>pack config registries add</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_registries_add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_registries_add/</guid>
      <description>pack config registries add Add a registries&#xA;Synopsis A Buildpack Registry is a (still experimental) place to publish, store, and discover buildpacks. Users can add registries from the config by using registries remove, and publish/yank buildpacks from it, as well as use those buildpacks when building applications.&#xA;pack config registries add [flags] Examples pack config registries add my-registry https://github.com/buildpacks/my-registry Options --default Set this buildpack registry as the default -h, --help help for add --type string Type of buildpack registry [git|github] (default &amp;#34;github&amp;#34;) Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack config registries&#x9;- List, add and remove registries </description>
    </item>
    <item>
      <title>pack config registries default</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_registries_default/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_registries_default/</guid>
      <description>pack config registries default Set default registry&#xA;Synopsis A Buildpack Registry is a (still experimental) place to publish, store, and discover buildpacks.&#xA;You can use this command to list, set, and unset a default registry, which will be used when looking for buildpacks:* To list your default registry, run pack config registries default.&#xA;To set your default registry, run pack config registries default &amp;lt;registry-name&amp;gt;. To unset your default registry, run pack config registries default --unset.</description>
    </item>
    <item>
      <title>pack config registries list</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_registries_list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_registries_list/</guid>
      <description>pack config registries list List registries&#xA;Synopsis A Buildpack Registry is a (still experimental) place to publish, store, and discover buildpacks. List Registries saved in the pack config.&#xA;Show the registries that are either added by default or have been explicitly added by using pack config registries add&#xA;pack config registries list [flags] Examples pack config registries list Options -h, --help help for list Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack config registries&#x9;- List, add and remove registries </description>
    </item>
    <item>
      <title>pack config registries remove</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_registries_remove/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_registries_remove/</guid>
      <description>pack config registries remove Remove a registries&#xA;Synopsis A Buildpack Registry is a (still experimental) place to publish, store, and discover buildpacks. Users can remove registries from the config by using pack config registries remove &amp;lt;registry&amp;gt;&#xA;pack config registries remove [flags] Examples pack config registries remove myregistry Options -h, --help help for remove Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack config registries&#x9;- List, add and remove registries </description>
    </item>
    <item>
      <title>pack config registry-mirrors</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_registry-mirrors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_registry-mirrors/</guid>
      <description>pack config registry-mirrors List, add and remove OCI registry mirrors&#xA;pack config registry-mirrors [flags] Options -h, --help Help for &amp;#39;run-image-mirrors&amp;#39; Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack config&#x9;- Interact with your local pack config file pack config registry-mirrors add&#x9;- Add a mirror for a registry pack config registry-mirrors list&#x9;- List registry-mirrors pack config registry-mirrors remove&#x9;- Remove a mirror for a registry </description>
    </item>
    <item>
      <title>pack config registry-mirrors add</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_registry-mirrors_add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_registry-mirrors_add/</guid>
      <description>pack config registry-mirrors add Add a mirror for a registry&#xA;Synopsis Set mirror for a given registry.&#xA;pack config registry-mirrors add &amp;lt;registry&amp;gt; [-m &amp;lt;mirror...] [flags] Examples pack config registry-mirrors add index.docker.io --mirror 10.0.0.1 pack config registry-mirrors add &amp;#39;*&amp;#39; --mirror 10.0.0.1 Options -h, --help help for add -m, --mirror string Registry mirror Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack config registry-mirrors&#x9;- List, add and remove OCI registry mirrors </description>
    </item>
    <item>
      <title>pack config registry-mirrors list</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_registry-mirrors_list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_registry-mirrors_list/</guid>
      <description>pack config registry-mirrors list List registry-mirrors&#xA;Synopsis List all registry mirrors.&#xA;pack config registry-mirrors list [flags] Examples pack config registry-mirrors list Options -h, --help help for list Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack config registry-mirrors&#x9;- List, add and remove OCI registry mirrors </description>
    </item>
    <item>
      <title>pack config registry-mirrors remove</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_registry-mirrors_remove/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_registry-mirrors_remove/</guid>
      <description>pack config registry-mirrors remove Remove a mirror for a registry&#xA;Synopsis Remove mirror for a given registry.&#xA;pack config registry-mirrors remove &amp;lt;registry&amp;gt; [flags] Examples pack config registry-mirrors remove index.docker.io Options -h, --help help for remove Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack config registry-mirrors&#x9;- List, add and remove OCI registry mirrors </description>
    </item>
    <item>
      <title>pack config run-image-mirrors</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_run-image-mirrors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_run-image-mirrors/</guid>
      <description>pack config run-image-mirrors List, add and remove run image mirrors&#xA;pack config run-image-mirrors [flags] Options -h, --help Help for &amp;#39;run-image-mirrors&amp;#39; Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack config&#x9;- Interact with your local pack config file pack config run-image-mirrors add&#x9;- Add a mirror for a run image pack config run-image-mirrors list&#x9;- List run-image-mirrors pack config run-image-mirrors remove&#x9;- Remove a mirror for a run image </description>
    </item>
    <item>
      <title>pack config run-image-mirrors add</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_run-image-mirrors_add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_run-image-mirrors_add/</guid>
      <description>pack config run-image-mirrors add Add a mirror for a run image&#xA;Synopsis Set mirrors to other repositories for a given run image&#xA;pack config run-image-mirrors add &amp;lt;image&amp;gt; [-m &amp;lt;mirror...] [flags] Examples pack config run-image-mirrors add cnbs/sample-stack-run:bionic --mirror index.docker.io/cnbs/sample-stack-run:bionic --mirror gcr.io/cnbs/sample-stack-run:bionic Options -h, --help help for add -m, --mirror strings Run image mirror Repeat for each mirror in order, or supply once by comma-separated list Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack config run-image-mirrors&#x9;- List, add and remove run image mirrors </description>
    </item>
    <item>
      <title>pack config run-image-mirrors list</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_run-image-mirrors_list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_run-image-mirrors_list/</guid>
      <description>pack config run-image-mirrors list List run-image-mirrors&#xA;Synopsis List all run image mirrors. If a run image is provided, it will return&#xA;pack config run-image-mirrors list [&amp;lt;run-image&amp;gt;] [flags] Examples pack config run-image-mirrors list Options -h, --help help for list Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack config run-image-mirrors&#x9;- List, add and remove run image mirrors </description>
    </item>
    <item>
      <title>pack config run-image-mirrors remove</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_run-image-mirrors_remove/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_run-image-mirrors_remove/</guid>
      <description>pack config run-image-mirrors remove Remove a mirror for a run image&#xA;Synopsis Remove mirrors for a given run image. If specific mirrors are passed, they will be removed. If no mirrors are provided, all mirrors for the given run image will be removed from the config.&#xA;pack config run-image-mirrors remove &amp;lt;image&amp;gt; [-m &amp;lt;mirror...] [flags] Examples pack config run-image-mirrors remove cnbs/sample-stack-run:bionic Options -h, --help help for remove -m, --mirror strings Run image mirror Repeat for each mirror in order, or supply once by comma-separated list Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack config run-image-mirrors&#x9;- List, add and remove run image mirrors </description>
    </item>
    <item>
      <title>pack config trusted-builders</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_trusted-builders/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_trusted-builders/</guid>
      <description>pack config trusted-builders List, add and remove trusted builders&#xA;Synopsis When pack considers a builder to be trusted, pack build operations will use a single lifecycle binary called the creator. This is more efficient than using an untrusted builder, where pack will execute five separate lifecycle binaries, each in its own container: analyze, detect, restore, build and export.&#xA;For more on trusted builders, and when to trust or untrust a builder, check out our docs here: https://buildpacks.</description>
    </item>
    <item>
      <title>pack config trusted-builders add</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_trusted-builders_add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_trusted-builders_add/</guid>
      <description>pack config trusted-builders add Add a trusted-builders&#xA;Synopsis Trust builder.&#xA;When building with this builder, all lifecycle phases will be run in a single container using the builder image.&#xA;pack config trusted-builders add [flags] Examples pack config trusted-builders add cnbs/sample-stack-run:bionic Options -h, --help help for add Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack config trusted-builders&#x9;- List, add and remove trusted builders </description>
    </item>
    <item>
      <title>pack config trusted-builders list</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_trusted-builders_list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_trusted-builders_list/</guid>
      <description>pack config trusted-builders list List trusted-builders&#xA;Synopsis List Trusted Builders.&#xA;Show the builders that are either trusted by default or have been explicitly trusted locally using trusted-builder add&#xA;pack config trusted-builders list [flags] Examples pack config trusted-builders list Options -h, --help help for list Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack config trusted-builders&#x9;- List, add and remove trusted builders </description>
    </item>
    <item>
      <title>pack config trusted-builders remove</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_trusted-builders_remove/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_config_trusted-builders_remove/</guid>
      <description>pack config trusted-builders remove Remove a trusted-builders&#xA;Synopsis Stop trusting builder.&#xA;When building with this builder, all lifecycle phases will be no longer be run in a single container using the builder image.&#xA;pack config trusted-builders remove [flags] Examples pack config trusted-builders remove cnbs/sample-stack-run:bionic Options -h, --help help for remove Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack config trusted-builders&#x9;- List, add and remove trusted builders </description>
    </item>
    <item>
      <title>pack extension</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_extension/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_extension/</guid>
      <description>pack extension Interact with extensions&#xA;Options -h, --help Help for &amp;#39;extension&amp;#39; Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack&#x9;- CLI for building apps using Cloud Native Buildpacks pack extension inspect&#x9;- Show information about an extension pack extension new&#x9;- Creates basic scaffolding of an extension pack extension package&#x9;- Package an extension in OCI format pack extension pull&#x9;- Pull an extension from a registry and store it locally pack extension register&#x9;- Register an extension to a registry pack extension yank&#x9;- Yank an extension from a registry </description>
    </item>
    <item>
      <title>pack extension inspect</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_extension_inspect/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_extension_inspect/</guid>
      <description>pack extension inspect Show information about an extension&#xA;pack extension inspect &amp;lt;extension-name&amp;gt; [flags] Examples pack extension inspect &amp;lt;example-extension&amp;gt; Options -h, --help Help for &amp;#39;inspect&amp;#39; Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack extension&#x9;- Interact with extensions </description>
    </item>
    <item>
      <title>pack extension new</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_extension_new/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_extension_new/</guid>
      <description>pack extension new Creates basic scaffolding of an extension&#xA;pack extension new &amp;lt;id&amp;gt; [flags] Examples pack extension new &amp;lt;example-extension&amp;gt; Options -h, --help Help for &amp;#39;new&amp;#39; Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack extension&#x9;- Interact with extensions </description>
    </item>
    <item>
      <title>pack extension package</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_extension_package/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_extension_package/</guid>
      <description>pack extension package Package an extension in OCI format&#xA;pack extension package &amp;lt;name&amp;gt; --config &amp;lt;config-path&amp;gt; [flags] Options -c, --config string Path to package TOML config -f, --format string Format to save package as (&amp;#34;image&amp;#34; or &amp;#34;file&amp;#34;) -h, --help Help for &amp;#39;package&amp;#39; --publish Publish the extension directly to the container registry specified in &amp;lt;name&amp;gt;, instead of the daemon (applies to &amp;#34;--format=image&amp;#34; only). --pull-policy string Pull policy to use. Accepted values are always, never, and if-not-present.</description>
    </item>
    <item>
      <title>pack extension pull</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_extension_pull/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_extension_pull/</guid>
      <description>pack extension pull Pull an extension from a registry and store it locally&#xA;pack extension pull &amp;lt;uri&amp;gt; [flags] Examples pack extension pull &amp;lt;extension-example&amp;gt; Options -h, --help Help for &amp;#39;pull&amp;#39; Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack extension&#x9;- Interact with extensions </description>
    </item>
    <item>
      <title>pack extension register</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_extension_register/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_extension_register/</guid>
      <description>pack extension register Register an extension to a registry&#xA;pack extension register &amp;lt;image&amp;gt; [flags] Examples pack extension register &amp;lt;extension-example&amp;gt; Options -h, --help Help for &amp;#39;register&amp;#39; Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack extension&#x9;- Interact with extensions </description>
    </item>
    <item>
      <title>pack extension yank</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_extension_yank/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_extension_yank/</guid>
      <description>pack extension yank Yank an extension from a registry&#xA;pack extension yank &amp;lt;extension-id-and-version&amp;gt; [flags] Examples pack yank &amp;lt;extension-example&amp;gt; Options -h, --help Help for &amp;#39;yank&amp;#39; Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack extension&#x9;- Interact with extensions </description>
    </item>
    <item>
      <title>pack inspect</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_inspect/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_inspect/</guid>
      <description>pack inspect Show information about a built app image&#xA;pack inspect &amp;lt;image-name&amp;gt; [flags] Examples pack inspect buildpacksio/pack Options --bom print bill of materials -h, --help Help for &amp;#39;inspect&amp;#39; -o, --output string Output format to display builder detail (json, yaml, toml, human-readable). Omission of this flag will display as human-readable. (default &amp;#34;human-readable&amp;#34;) Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack&#x9;- CLI for building apps using Cloud Native Buildpacks </description>
    </item>
    <item>
      <title>pack rebase</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_rebase/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_rebase/</guid>
      <description>pack rebase Rebase app image with latest run image&#xA;Synopsis Rebase allows you to quickly swap out the underlying OS layers (run image) of an app image generated by pack build with a newer version of the run image, without re-building the application.&#xA;pack rebase &amp;lt;image-name&amp;gt; [flags] Examples pack rebase buildpacksio/pack Options --force Perform rebase operation without target validation (only available for API &amp;gt;= 0.12) -h, --help Help for &amp;#39;rebase&amp;#39; --publish Publish the rebased application image directly to the container registry specified in &amp;lt;image-name&amp;gt;, instead of the daemon.</description>
    </item>
    <item>
      <title>pack report</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_report/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_report/</guid>
      <description>pack report Display useful information for reporting an issue&#xA;pack report [flags] Examples pack report Options -e, --explicit Print config without redacting information -h, --help Help for &amp;#39;report&amp;#39; Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack&#x9;- CLI for building apps using Cloud Native Buildpacks </description>
    </item>
    <item>
      <title>pack sbom</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_sbom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_sbom/</guid>
      <description>pack sbom Interact with SBoM&#xA;Options -h, --help Help for &amp;#39;sbom&amp;#39; Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack&#x9;- CLI for building apps using Cloud Native Buildpacks pack sbom download&#x9;- Download SBoM from specified image </description>
    </item>
    <item>
      <title>pack sbom download</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_sbom_download/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_sbom_download/</guid>
      <description>pack sbom download Download SBoM from specified image&#xA;Synopsis Download layer containing structured Software Bill of Materials (SBoM) from specified image&#xA;pack sbom download &amp;lt;image-name&amp;gt; [flags] Examples pack sbom download buildpacksio/pack Options -h, --help Help for &amp;#39;download&amp;#39; -o, --output-dir string Path to export SBoM contents. It defaults export to the current working directory. (default &amp;#34;.&amp;#34;) --remote Download SBoM of image in remote registry (without pulling image) Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack sbom&#x9;- Interact with SBoM </description>
    </item>
    <item>
      <title>pack stack</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_stack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_stack/</guid>
      <description>pack stack (deprecated) Interact with stacks&#xA;Synopsis (Deprecated) Stacks are deprecated in favor of using BuildImages and RunImages directly, but will continue to be supported throughout all of 2023 and &amp;lsquo;24 if not longer. Please see our docs for more details- https://buildpacks.io/docs/concepts/components/stack&#xA;Options -h, --help help for stack Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack&#x9;- CLI for building apps using Cloud Native Buildpacks pack stack suggest&#x9;- (deprecated) List the recommended stacks </description>
    </item>
    <item>
      <title>pack stack suggest</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_stack_suggest/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_stack_suggest/</guid>
      <description>pack stack suggest (deprecated) List the recommended stacks&#xA;pack stack suggest [flags] Examples pack stack suggest Options -h, --help help for suggest Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack stack&#x9;- (deprecated) Interact with stacks </description>
    </item>
    <item>
      <title>pack version</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_version/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/cli/pack_version/</guid>
      <description>pack version Show current &amp;lsquo;pack&amp;rsquo; version&#xA;pack version [flags] Examples pack version Options -h, --help Help for &amp;#39;version&amp;#39; Options inherited from parent commands --force-color Force color output --no-color Disable color output -q, --quiet Show less output --timestamps Enable timestamps in output -v, --verbose Show more output SEE ALSO pack&#x9;- CLI for building apps using Cloud Native Buildpacks </description>
    </item>
    <item>
      <title>Platform API</title>
      <link>https://buildpacks.io/docs/reference/spec/platform-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/reference/spec/platform-api/</guid>
      <description>&lt;p&gt;The Platform specification defines the interface between the CNB &lt;a href=&#34;https://buildpacks.io/docs/for-platform-operators/concepts/lifecycle/&#34;&gt;lifecycle&lt;/a&gt; and a &lt;a href=&#34;https://buildpacks.io/docs/for-app-developers/concepts/platform/&#34;&gt;platform&lt;/a&gt; that runs it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Trusted Builders</title>
      <link>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/concepts/trusted_builders/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-platform-operators/how-to/integrate-ci/pack/concepts/trusted_builders/</guid>
      <description>&lt;p&gt;From version &lt;a href=&#34;https://github.com/buildpacks/pack/releases/tag/v0.11.0&#34;&gt;0.11.0&lt;/a&gt; onward, &lt;code&gt;pack&lt;/code&gt; can be used to identify builders that should be considered trusted. &lt;code&gt;pack build&lt;/code&gt; will operate slightly differently under the hood based on whether it considers the specified builder to be trusted.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
