<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Build in custom environments on Cloud Native Buildpacks</title>
    <link>https://buildpacks.io/docs/for-app-developers/how-to/special-cases/</link>
    <description>Recent content in Build in custom environments on Cloud Native Buildpacks</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://buildpacks.io/docs/for-app-developers/how-to/special-cases/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Build for ARM architecture</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/special-cases/build-for-arm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/special-cases/build-for-arm/</guid>
      <description>As of today, there are no known released CNB builder images that support building ARM application images.&#xA;Users can create their own ARM64 builder image by following this guide.&#xA;In the following tutorial, we will be performing a build &amp;ldquo;manually&amp;rdquo;, in that we will be performing a build by invoking the lifecycle directly.&#xA;1. Prepare your working directory On your Linux ARM machine with a docker daemon installed, prepare the following directory tree structure.</description>
    </item>
    <item>
      <title>Build for Windows containers</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/special-cases/build-for-windows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/special-cases/build-for-windows/</guid>
      <description>EXPERIMENTAL Windows support is experimental!&#xA;Enable experimental mode by running: pack config experimental true&#xA;Before You Start Recommended reading Before trying out builds for Windows images, we recommend following the Linux image tutorial under Getting Started. Don&amp;rsquo;t worry, you can still run it on a Windows OS if you need to &amp;ndash; just make sure to enable Linux containers for Docker first.&#xA;When you&amp;rsquo;re done, head back here.&#xA;Enable Windows container mode In order to produce Windows container images, ensure Windows container mode is enabled in your Docker settings (available only in Docker for Windows).</description>
    </item>
    <item>
      <title>Export to OCI layout format on disk</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/special-cases/export-to-oci-layout/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/special-cases/export-to-oci-layout/</guid>
      <description>The OCI Image Layout is the directory structure for OCI content-addressable blobs and location-addressable references. See the specification. Exporting to OCI layout format is an experimental feature available on pack since version 0.30.0&#xA;1. Enable experimental feature Verify your pack version is equal or greater than 0.30.0&#xA;pack version Enable the experimental features on pack&#xA;pack config experimental true You can confirm everything is fine, checking the config.toml file in your PACK_HOME installation folder.</description>
    </item>
    <item>
      <title>Use an HTTP proxy</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/special-cases/use-http-proxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/special-cases/use-http-proxy/</guid>
      <description>Useful for university or corporate environments.</description>
    </item>
    <item>
      <title>Build on Podman</title>
      <link>https://buildpacks.io/docs/for-app-developers/how-to/special-cases/build-on-podman/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://buildpacks.io/docs/for-app-developers/how-to/special-cases/build-on-podman/</guid>
      <description>Use Podman as an alternative to Docker to create the containerized build environment.</description>
    </item>
  </channel>
</rss>
